State 9 conflicts: 1 shift/reduce
State 12 conflicts: 3 shift/reduce
State 13 conflicts: 3 shift/reduce
State 27 conflicts: 3 reduce/reduce


Grammar

    0 $accept: function_declaration $end

    1 function_declaration: simple_type IDENTIFIER LPAREN parameter_list RPAREN SEMICOLON
    2                     | simple_type IDENTIFIER LPAREN RPAREN SEMICOLON
    3                     | IDENTIFIER LPAREN RPAREN COLON simple_type SEMICOLON
    4                     | complex_type IDENTIFIER LPAREN parameter_list RPAREN SEMICOLON

    5 type: simple_type
    6     | complex_type

    7 simple_type: INT
    8            | DOUBLE
    9            | CHAR
   10            | VOID

   11 complex_type: CONST complex_type
   12             | CONSTEXP complex_type
   13             | complex_type STAR
   14             | complex_type REF
   15             | complex_type RREF
   16             | simple_type

   17 parameter_list: parameter
   18               | parameter_list COMMA parameter

   19 parameter: type IDENTIFIER
   20          | type
   21          | type IDENTIFIER array_suffix

   22 array_suffix: LBRACKET NUMBER RBRACKET
   23             | LBRACKET RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    REF (258) 14
    RREF (259) 15
    STAR (260) 13
    LPAREN (261) 1 2 3 4
    RPAREN (262) 1 2 3 4
    LBRACKET (263) 22 23
    RBRACKET (264) 22 23
    COMMA (265) 18
    COLON (266) 3
    SEMICOLON (267) 1 2 3 4
    NUMBER (268) 22
    INT (269) 7
    DOUBLE (270) 8
    CONST (271) 11
    CHAR (272) 9
    VOID (273) 10
    CONSTEXP (274) 12
    IDENTIFIER (275) 1 2 3 4 19 21


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    function_declaration (22)
        on left: 1 2 3 4
        on right: 0
    type (23)
        on left: 5 6
        on right: 19 20 21
    simple_type (24)
        on left: 7 8 9 10
        on right: 1 2 3 5 16
    complex_type (25)
        on left: 11 12 13 14 15 16
        on right: 4 6 11 12 13 14 15
    parameter_list (26)
        on left: 17 18
        on right: 1 4 18
    parameter (27)
        on left: 19 20 21
        on right: 17 18
    array_suffix (28)
        on left: 22 23
        on right: 21


State 0

    0 $accept: . function_declaration $end

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    CONST       shift, and go to state 3
    CHAR        shift, and go to state 4
    VOID        shift, and go to state 5
    CONSTEXP    shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    function_declaration  go to state 8
    simple_type           go to state 9
    complex_type          go to state 10


State 1

    7 simple_type: INT .

    $default  reduce using rule 7 (simple_type)


State 2

    8 simple_type: DOUBLE .

    $default  reduce using rule 8 (simple_type)


State 3

   11 complex_type: CONST . complex_type

    INT       shift, and go to state 1
    DOUBLE    shift, and go to state 2
    CONST     shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    CONSTEXP  shift, and go to state 6

    simple_type   go to state 11
    complex_type  go to state 12


State 4

    9 simple_type: CHAR .

    $default  reduce using rule 9 (simple_type)


State 5

   10 simple_type: VOID .

    $default  reduce using rule 10 (simple_type)


State 6

   12 complex_type: CONSTEXP . complex_type

    INT       shift, and go to state 1
    DOUBLE    shift, and go to state 2
    CONST     shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    CONSTEXP  shift, and go to state 6

    simple_type   go to state 11
    complex_type  go to state 13


State 7

    3 function_declaration: IDENTIFIER . LPAREN RPAREN COLON simple_type SEMICOLON

    LPAREN  shift, and go to state 14


State 8

    0 $accept: function_declaration . $end

    $end  shift, and go to state 15


State 9

    1 function_declaration: simple_type . IDENTIFIER LPAREN parameter_list RPAREN SEMICOLON
    2                     | simple_type . IDENTIFIER LPAREN RPAREN SEMICOLON
   16 complex_type: simple_type .

    IDENTIFIER  shift, and go to state 16

    IDENTIFIER  [reduce using rule 16 (complex_type)]
    $default    reduce using rule 16 (complex_type)


State 10

    4 function_declaration: complex_type . IDENTIFIER LPAREN parameter_list RPAREN SEMICOLON
   13 complex_type: complex_type . STAR
   14             | complex_type . REF
   15             | complex_type . RREF

    REF         shift, and go to state 17
    RREF        shift, and go to state 18
    STAR        shift, and go to state 19
    IDENTIFIER  shift, and go to state 20


State 11

   16 complex_type: simple_type .

    $default  reduce using rule 16 (complex_type)


State 12

   11 complex_type: CONST complex_type .
   13             | complex_type . STAR
   14             | complex_type . REF
   15             | complex_type . RREF

    REF   shift, and go to state 17
    RREF  shift, and go to state 18
    STAR  shift, and go to state 19

    REF       [reduce using rule 11 (complex_type)]
    RREF      [reduce using rule 11 (complex_type)]
    STAR      [reduce using rule 11 (complex_type)]
    $default  reduce using rule 11 (complex_type)


State 13

   12 complex_type: CONSTEXP complex_type .
   13             | complex_type . STAR
   14             | complex_type . REF
   15             | complex_type . RREF

    REF   shift, and go to state 17
    RREF  shift, and go to state 18
    STAR  shift, and go to state 19

    REF       [reduce using rule 12 (complex_type)]
    RREF      [reduce using rule 12 (complex_type)]
    STAR      [reduce using rule 12 (complex_type)]
    $default  reduce using rule 12 (complex_type)


State 14

    3 function_declaration: IDENTIFIER LPAREN . RPAREN COLON simple_type SEMICOLON

    RPAREN  shift, and go to state 21


State 15

    0 $accept: function_declaration $end .

    $default  accept


State 16

    1 function_declaration: simple_type IDENTIFIER . LPAREN parameter_list RPAREN SEMICOLON
    2                     | simple_type IDENTIFIER . LPAREN RPAREN SEMICOLON

    LPAREN  shift, and go to state 22


State 17

   14 complex_type: complex_type REF .

    $default  reduce using rule 14 (complex_type)


State 18

   15 complex_type: complex_type RREF .

    $default  reduce using rule 15 (complex_type)


State 19

   13 complex_type: complex_type STAR .

    $default  reduce using rule 13 (complex_type)


State 20

    4 function_declaration: complex_type IDENTIFIER . LPAREN parameter_list RPAREN SEMICOLON

    LPAREN  shift, and go to state 23


State 21

    3 function_declaration: IDENTIFIER LPAREN RPAREN . COLON simple_type SEMICOLON

    COLON  shift, and go to state 24


State 22

    1 function_declaration: simple_type IDENTIFIER LPAREN . parameter_list RPAREN SEMICOLON
    2                     | simple_type IDENTIFIER LPAREN . RPAREN SEMICOLON

    RPAREN    shift, and go to state 25
    INT       shift, and go to state 1
    DOUBLE    shift, and go to state 2
    CONST     shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    CONSTEXP  shift, and go to state 6

    type            go to state 26
    simple_type     go to state 27
    complex_type    go to state 28
    parameter_list  go to state 29
    parameter       go to state 30


State 23

    4 function_declaration: complex_type IDENTIFIER LPAREN . parameter_list RPAREN SEMICOLON

    INT       shift, and go to state 1
    DOUBLE    shift, and go to state 2
    CONST     shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    CONSTEXP  shift, and go to state 6

    type            go to state 26
    simple_type     go to state 27
    complex_type    go to state 28
    parameter_list  go to state 31
    parameter       go to state 30


State 24

    3 function_declaration: IDENTIFIER LPAREN RPAREN COLON . simple_type SEMICOLON

    INT     shift, and go to state 1
    DOUBLE  shift, and go to state 2
    CHAR    shift, and go to state 4
    VOID    shift, and go to state 5

    simple_type  go to state 32


State 25

    2 function_declaration: simple_type IDENTIFIER LPAREN RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 26

   19 parameter: type . IDENTIFIER
   20          | type .
   21          | type . IDENTIFIER array_suffix

    IDENTIFIER  shift, and go to state 34

    $default  reduce using rule 20 (parameter)


State 27

    5 type: simple_type .
   16 complex_type: simple_type .

    REF         reduce using rule 16 (complex_type)
    RREF        reduce using rule 16 (complex_type)
    STAR        reduce using rule 16 (complex_type)
    RPAREN      reduce using rule 5 (type)
    RPAREN      [reduce using rule 16 (complex_type)]
    COMMA       reduce using rule 5 (type)
    COMMA       [reduce using rule 16 (complex_type)]
    IDENTIFIER  reduce using rule 5 (type)
    IDENTIFIER  [reduce using rule 16 (complex_type)]
    $default    reduce using rule 5 (type)


State 28

    6 type: complex_type .
   13 complex_type: complex_type . STAR
   14             | complex_type . REF
   15             | complex_type . RREF

    REF   shift, and go to state 17
    RREF  shift, and go to state 18
    STAR  shift, and go to state 19

    $default  reduce using rule 6 (type)


State 29

    1 function_declaration: simple_type IDENTIFIER LPAREN parameter_list . RPAREN SEMICOLON
   18 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 35
    COMMA   shift, and go to state 36


State 30

   17 parameter_list: parameter .

    $default  reduce using rule 17 (parameter_list)


State 31

    4 function_declaration: complex_type IDENTIFIER LPAREN parameter_list . RPAREN SEMICOLON
   18 parameter_list: parameter_list . COMMA parameter

    RPAREN  shift, and go to state 37
    COMMA   shift, and go to state 36


State 32

    3 function_declaration: IDENTIFIER LPAREN RPAREN COLON simple_type . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 33

    2 function_declaration: simple_type IDENTIFIER LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 2 (function_declaration)


State 34

   19 parameter: type IDENTIFIER .
   21          | type IDENTIFIER . array_suffix

    LBRACKET  shift, and go to state 39

    $default  reduce using rule 19 (parameter)

    array_suffix  go to state 40


State 35

    1 function_declaration: simple_type IDENTIFIER LPAREN parameter_list RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 36

   18 parameter_list: parameter_list COMMA . parameter

    INT       shift, and go to state 1
    DOUBLE    shift, and go to state 2
    CONST     shift, and go to state 3
    CHAR      shift, and go to state 4
    VOID      shift, and go to state 5
    CONSTEXP  shift, and go to state 6

    type          go to state 26
    simple_type   go to state 27
    complex_type  go to state 28
    parameter     go to state 42


State 37

    4 function_declaration: complex_type IDENTIFIER LPAREN parameter_list RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 38

    3 function_declaration: IDENTIFIER LPAREN RPAREN COLON simple_type SEMICOLON .

    $default  reduce using rule 3 (function_declaration)


State 39

   22 array_suffix: LBRACKET . NUMBER RBRACKET
   23             | LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 44
    NUMBER    shift, and go to state 45


State 40

   21 parameter: type IDENTIFIER array_suffix .

    $default  reduce using rule 21 (parameter)


State 41

    1 function_declaration: simple_type IDENTIFIER LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 1 (function_declaration)


State 42

   18 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 18 (parameter_list)


State 43

    4 function_declaration: complex_type IDENTIFIER LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 4 (function_declaration)


State 44

   23 array_suffix: LBRACKET RBRACKET .

    $default  reduce using rule 23 (array_suffix)


State 45

   22 array_suffix: LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 46


State 46

   22 array_suffix: LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 22 (array_suffix)
