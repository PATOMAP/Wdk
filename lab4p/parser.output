Nonterminals useless in grammar

    convert


Terminals unused in grammar

    ZMIENNA


Rules useless in grammar

   10 convert: ZMIENNA EQUAL ZMIENNA


Grammar

    0 $accept: total $end

    1 total: expression EQUAL

    2 expression: expression PLUS expression
    3           | expression TIMES expression
    4           | expression SUBSTRACT expression
    5           | expression POWER expression
    6           | SIN expression
    7           | COS expression
    8           | expression DIVIDE expression
    9           | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS (258) 2
    TIMES (259) 3
    EQUAL (260) 1
    SUBSTRACT (261) 4
    DIVIDE (262) 8
    POWER (263) 5
    SIN (264) 6
    COS (265) 7
    NUMBER <dtype> (266) 9
    ZMIENNA <x> (267)


Nonterminals, with rules where they appear

    $accept (13)
        on left: 0
    total <dtype> (14)
        on left: 1
        on right: 0
    expression <dtype> (15)
        on left: 2 3 4 5 6 7 8 9
        on right: 1 2 3 4 5 6 7 8


State 0

    0 $accept: . total $end

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    total       go to state 4
    expression  go to state 5


State 1

    6 expression: SIN . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 6


State 2

    7 expression: COS . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 7


State 3

    9 expression: NUMBER .

    $default  reduce using rule 9 (expression)


State 4

    0 $accept: total . $end

    $end  shift, and go to state 8


State 5

    1 total: expression . EQUAL
    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    8           | expression . DIVIDE expression

    PLUS       shift, and go to state 9
    TIMES      shift, and go to state 10
    EQUAL      shift, and go to state 11
    SUBSTRACT  shift, and go to state 12
    DIVIDE     shift, and go to state 13
    POWER      shift, and go to state 14


State 6

    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    6           | SIN expression .
    8           | expression . DIVIDE expression

    $default  reduce using rule 6 (expression)


State 7

    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    7           | COS expression .
    8           | expression . DIVIDE expression

    $default  reduce using rule 7 (expression)


State 8

    0 $accept: total $end .

    $default  accept


State 9

    2 expression: expression PLUS . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 15


State 10

    3 expression: expression TIMES . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 16


State 11

    1 total: expression EQUAL .

    $default  reduce using rule 1 (total)


State 12

    4 expression: expression SUBSTRACT . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 17


State 13

    8 expression: expression DIVIDE . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 18


State 14

    5 expression: expression POWER . expression

    SIN     shift, and go to state 1
    COS     shift, and go to state 2
    NUMBER  shift, and go to state 3

    expression  go to state 19


State 15

    2 expression: expression . PLUS expression
    2           | expression PLUS expression .
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    8           | expression . DIVIDE expression

    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 13
    POWER   shift, and go to state 14

    $default  reduce using rule 2 (expression)


State 16

    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    3           | expression TIMES expression .
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    8           | expression . DIVIDE expression

    POWER  shift, and go to state 14

    $default  reduce using rule 3 (expression)


State 17

    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    4           | expression SUBSTRACT expression .
    5           | expression . POWER expression
    8           | expression . DIVIDE expression

    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 13
    POWER   shift, and go to state 14

    $default  reduce using rule 4 (expression)


State 18

    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    8           | expression . DIVIDE expression
    8           | expression DIVIDE expression .

    POWER  shift, and go to state 14

    $default  reduce using rule 8 (expression)


State 19

    2 expression: expression . PLUS expression
    3           | expression . TIMES expression
    4           | expression . SUBSTRACT expression
    5           | expression . POWER expression
    5           | expression POWER expression .
    8           | expression . DIVIDE expression

    $default  reduce using rule 5 (expression)
